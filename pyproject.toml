[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "ngwpc-cookbooks"
dynamic = ["version"]
description = "NGWPC Data Processing Cookbooks"
readme = "README.md"
requires-python = ">=3.11"
license = { file = "LICENSE" }
authors = [
  { name = "taddyb", email = "tadd.n.bindas@rtx.com" },
]
dependencies = [
  "geopandas==1.0.1",
  "folium==0.19.5",
  "httpx==0.28.1",
  "ipykernel==6.29.5",
  "jupyterlab==4.4.3",
  "jupytergis==0.5.0",
  "matplotlib==3.10.3",
  "xarray==2025.07.1",
]

[project.optional-dependencies]
dev = [
  "pre-commit==3.8.0",
  "ruff==0.11.13",
  "black==25.1.0",
  "mypy==1.15.0",
  "nbstripout==0.8.1",
]
docs = [
  "mkdocs-material==9.6.14",
  "sympy==1.14.0"
]

[project.urls]
Source = "https://github.com/taddyb/ngwpc-cookbooks"
Issues = "https://github.com/taddyb/ngwpc-cookbooks/issues"

[tool.hatch.version]
path = "src/ngwpc_cookbooks/_version.py"

[tool.black]
line-length = 110
skip-string-normalization = true
preview = true
target-version = ['py311']

[tool.ruff]
line-length = 110
exclude = [".csv", "LICENSE", ".tf", ".tfvars"]
lint.select = [
  "F",      # Errors detected by Pyflakes
  "E",      # Error detected by Pycodestyle
  "W",      # Warning detected by Pycodestyle
  "I",      # isort
  "D",      # pydocstyle
  "B",      # flake8-bugbear
  "Q",      # flake8-quotes
  "TID",    # flake8-tidy-imports
  "C4",     # flake8-comprehensions
  "BLE",    # flake8-blind-except
  "UP",     # pyupgrade
  "RUF100", # Report unused noqa directives
]
lint.ignore = [
  # line too long -> we accept long comment lines; black gets rid of long code lines
  "E501",
  # Do not assign a lambda expression, use a def -> lambda expression assignments are convenient
  "E731",
  # allow I, O, l as variable names -> I is the identity matrix
  "E741",
  # Missing docstring in public package
  "D104",
  # Missing docstring in public module
  "D100",
  # Missing docstring in __init__
  "D107",
  # Errors from function calls in argument defaults. These are fine when the result is immutable.
  "B008",
  # __magic__ methods are are often self-explanatory, allow missing docstrings
  "D105",
  # first line should end with a period [Bug: doesn't work with single-line docstrings]
  "D400",
  # First line should be in imperative mood; try rephrasing
  "D401",
  ## Disable one in each pair of mutually incompatible rules
  # We don't want a blank line before a class docstring
  "D203",
  # We want docstrings to start immediately after the opening triple quote
  "D213",
  # Bare except okay for passing
  "E722",
]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.per-file-ignores]
"docs/*" = ["I"]
"tests/*" = ["D"]
"*/__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.11"
warn_return_any = false
disallow_any_unimported = false
warn_unused_configs = true
strict_optional = true
ignore_missing_imports = true
check_untyped_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
show_error_codes = true
warn_unused_ignores = true
